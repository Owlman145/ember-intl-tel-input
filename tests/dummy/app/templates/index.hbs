<div class="jumbotron">
  <div class="container">
    <h1 class="text-center">
      <span class="flow-text">International Telephone Input 2</span><br/>
      <small><span class="flow-text">Ember Addon</span></small>
    </h1>
    <div class="row">
      <div class="col-sm-10 col-sm-offset-1">
        <p class="lead text-center">
          <span class="flow-text">An Ember.js addon for entering and validating international telephone numbers.</span>
          <span class="flow-text">This project is a fork of <a href="https://github.com/justin-lau/ember-intl-tel-input" target="_blank">justin-lau/ember-intl-tel-input</a> that is outdated.</span>
        </p>
      </div>
    </div>
    <div class="row text-center">
      <!-- <button class="btn btn-sm btn-default">github</button> -->
      <a href="https://github.com/cdatehortuab/ember-intl-tel-input"><span class="fa fa-5x fa-github"></span></a>
    </div>
  </div>
</div>{{!-- /.jumbotron --}}

<div class="container">

  <div class="row">

    <nav>
      {{#bootstrap-affix id="side-nav" after=".jumbotron" autoPosition=true}}
        <ul class="nav">
          <li><a href="#basic-usage">Basic Usage</a></li>
          <li><a href="#with-utilities-script">With Utilities Script</a></li>
          <li><a href="#properties-binding">Properties Binding</a></li>
          <li><a href="#lookup-users-country">Lookup User's Country</a></li>
          <li><a href="#credits">Credits</a></li>
        </ul>
      {{/bootstrap-affix}}
    </nav>

    <main>

      <section id="basic-usage">
        <h1><span class="flow-text">Basic Usage</span></h1>
        <hr />

        <p>Just place the {{#code-inline}}\{{intl-tel-input}}{{/code-inline}} component in the handlebars template, as you would have guessed.</p>

        <div class="row sample">

          <div class="col-code">
            <h2><span class="flow-text">Code</span></h2>
            {{#code-block language='handlebars'}}\{{intl-tel-input}}{{/code-block}}
          </div>

          <div class="col-result">
            <h2><span class="flow-text">Result</span></h2>
            {{intl-tel-input autoPlaceholder=false}}
          </div>

        </div>{{!-- /.row --}}

        <p>The component derives from <a href="https://emberjs.com/api/ember/2.17/classes/TextField" target="_blank">{{#code-inline}}Ember.TextField{{/code-inline}}</a>, anything you can do with the input helper can also be done with this component.</p>

        <div class="row sample">

          <div class="col-code">
            <h2><span class="flow-text">Code</span></h2>
            {{#code-block language='handlebars'}}\{{intl-tel-input value="555-5555"}}{{/code-block}}
          </div>

          <div class="col-result">
            <h2><span class="flow-text">Result</span></h2>
            {{intl-tel-input autoPlaceholder=false value="555-5555"}}
          </div>

        </div>{{!-- /.row --}}

      </section>{{!-- /#basic-usage --}}

      <section id="with-utilities-script">
        <h1><span class="flow-text">With Utilities Script</span></h1>
        <hr />

        <p>With the <a href="https://github.com/jackocnr/intl-tel-input#utilities-script" target="_blank">utilities script</a> included, the {{#code-inline}}autoPlaceholder{{/code-inline}} option is automatically enabled. The rest of the examples assume the utilities script is included.</p>

        <div class="row sample">

          <div class="col-code">
            <h2><span class="flow-text">Code</span></h2>
            {{#code-block language='javascript'}}// ember-cli-build.js
module.exports = function(defaults) {
  let app = new EmberApp(defaults, {
    ...
    'ember-intl-tel-input': {
      includeUtilsScript: true, // default to false
    },
    ...
  });
  ...
};{{/code-block}}
            Or if you want to specify your own compatible utils script (like a custom build).
            {{#code-block language='javascript'}}// ember-cli-build.js
module.exports = function(defaults) {
  let app = new EmberApp(defaults, {
    ...
    'ember-intl-tel-input': {
      utilsScript: 'path/to/utilsScript.js',
    },
    ...
  });
  ...
};{{/code-block}}
            If you use both options the default utilsScript will be exported to the path specified.
            {{#code-block language='handlebars'}}\{{intl-tel-input}}{{/code-block}}
          </div>

          <div class="col-result">
            <h2><span class="flow-text">Result</span></h2>
            {{intl-tel-input}}
          </div>

        </div>{{!-- /.row --}}

      </section>{{!-- /#with-utilities-script --}}

      <section id="properties-binding">
        <h1><span class="flow-text">Properties Binding</span></h1>
        <hr />

        <p>Use the following properties for binding:</p>

        <ul>
          <li>{{#code-inline}}value{{/code-inline}} for input value</li>
          <li>{{#code-inline}}selectedCountryData{{/code-inline}} for data of the currently selected country</li>
          <li>{{#code-inline}}number{{/code-inline}} for formatted phone number</li>
          <li>{{#code-inline}}extension{{/code-inline}} for the extension part of the number</li>
          <li>{{#code-inline}}numberType{{/code-inline}} for the type of the current number</li>
          <li>{{#code-inline}}isValidNumber{{/code-inline}} for the validity of the number</li>
          <li>{{#code-inline}}validationError{{/code-inline}} for information about a validation error</li>
        </ul>

        <div class="row sample">

          <div class="col-code">
            <h2><span class="flow-text">Code</span></h2>
            {{#code-block language='handlebars'}}\{{intl-tel-input
  allowExtensions=true
  value=value
  selectedCountryData=selectedCountryData
  number=number
  extension=extension
  numberType=numberType
  isValidNumber=isValidNumber
  validationError=validationError}}{{/code-block}}
          </div>

          <div class="col-result">
            <h2><span class="flow-text">Result</span></h2>
            {{intl-tel-input
              allowExtensions=true
              value=value
              selectedCountryData=selectedCountryData
              number=number
              extension=extension
              numberType=numberType
              isValidNumber=isValidNumber
              validationError=validationError}}

            <dl>
              <dt>\{{value}}:</dt>
              <dd>{{{if value value '<br>'}}}</dd>
              <dt>\{{selectedCountryData.name}}:</dt>
              <dd>{{{if selectedCountryData selectedCountryData.name '<br>'}}}</dd>
              <dt>\{{selectedCountryData.iso2}}:</dt>
              <dd>{{{if selectedCountryData selectedCountryData.iso2 '<br>'}}}</dd>
              <dt>\{{selectedCountryData.dialCode}}:</dt>
              <dd>{{{if selectedCountryData selectedCountryData.dialCode '<br>'}}}</dd>
              <dt>\{{number}}:</dt>
              <dd>{{{if number number '<br>'}}}</dd>
              <dt>\{{extension}}:</dt>
              <dd>{{{if extension extension '<br>'}}}</dd>
              <dt>\{{isValidNumber}}:</dt>
              <dd>{{{if isValidNumber 'true' 'false'}}}</dd>
              <dt>\{{validationError}}:</dt>
              <dd>{{{if validationError validationError '<br>'}}}</dd>
            </dl>
          </div>

        </div>{{!-- /.row --}}

      </section>{{!-- /#properties-binding --}}

      <section id="lookup-users-country">
        <h1><span class="flow-text">Lookup User's Country</span></h1>
        <hr />

        <p>{{#code-inline}}intl-tel-input{{/code-inline}} provides a convenient way to look up the user's country based on their IP addresses. This example uses <a href="https://ipinfo.io/" target="_blank">ipinfo.io</a> for demonstration.</p>

        <div class="row sample">

          <div class="col-code">
            <h2><span class="flow-text">Code</span></h2>
            {{#code-block language='javascript'}}// controller
...
geoIpLookupFunc: function(callback) {
  $.getJSON('https://ipinfo.io/')
   .always(function(resp) {
     if (!resp || !resp.country_code) {
       callback('');
     }

     callback(resp.country_code);
   });
}
...{{/code-block}}
            {{#code-block language='handlebars'}}\{{intl-tel-input
  initialCountry="auto"
  geoIpLookup=geoIpLookupFunc}}{{/code-block}}
          </div>

          <div class="col-result">
            <h2><span class="flow-text">Result</span></h2>
            {{intl-tel-input initialCountry="auto" geoIpLookup=geoIpLookupFunc}}
          </div>

        </div>{{!-- /.row --}}

      </section>{{!-- /#lookup-users-country --}}

      <section id="credits">
        <h1><span class="flow-text">Credits</span></h1>
        <hr />
        <p>This is a wrapper library. It simply wraps the API of the <a href="http://jackocnr.com/intl-tel-input.html" target="_blank">original jQuery plugin</a> created by <a href="http://jackocnr.com/" target="_blank">Jack O'Connor</a> into an <a href="http://emberjs.com/" target="_blank">Ember.js</a> component.</p>
        <p>The original jQuery plugin also depends on several other open-source libraries:</p>
        <ul class="list">
          <li>Flag images from <a href="https://github.com/behdad/region-flags" target="_blank">region-flags</a></li>
          <li>Original country data from mledoze's <a href="https://github.com/mledoze/countries" target="_blank">World countries in JSON, CSV and XML</a></li>
          <li>Formatting/validation/example number code from Google's <a href="https://github.com/googlei18n/libphonenumber" target="_blank">libphonenumber</a></li>
          <li>Lookup user's country using <a href="http://ipinfo.io/" target="_blank">ipinfo.io</a></li>
        </ul>
        <p><s>This demo page uses <a href="http://www.telize.com/" target="_blank">Telize</a> for a fast, SSL-supported, and FREE Geo IP service.</s></p>
        <p><a href="http://www.cambus.net/adventures-in-running-a-free-public-api/" target="_blank">Telize no longer provides free services due to heavy abuse</a>. This demo page is now using <a href="http://ipinfo.io" target="_blank">ipinfo.io</a> instead.</p>
        <p>The layout and color theme of this very documentation page comes from Twitter's <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a> and <a href="http://emberjs.com/" target="_blank">Ember.js</a>, respectively.</p>
      </section>{{!-- /#about --}}

    </main>

  </div>{{!-- /.row --}}

</div>{{!-- /.container --}}